{"version":3,"sources":["img/gotlogo.png","country.js","wrapper.js","country-list.js","input.js","search.js","action-list.js","header.js","country-selected.js","country-page.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["module","exports","CountryStyled","styled","div","Country","characterImageFull","flag","name","cioc","population","region","capital","nativeName","history","alpha2Code","useHistory","onClick","console","log","push","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","useState","countryListByName","useSelector","state","countryList","length","useEffect","fetch","then","response","json","list","type","payload","catch","map","characterName","houseName","key","Math","random","InputStyled","label","Input","props","SearchStyled","Search","inputValue","setInputValue","placeholder","value","onChange","e","target","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","logo","CountrySelectedStyled","CountrySelected","actorName","nickname","siblings","guardedBy","killed","parents","servedBy","parentOf","marriedEngaged","killedBy","serves","kingsguard","style","display","item","class","CountryPageStyled","CountryPage","match","DBcountry","find","params","id","country","goBack","store","createStore","action","filter","coutryFilteredByRegion","filterByRegion","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.80beac42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gotlogo.21d13671.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport slugify from \"slugify\";\n\nconst CountryStyled = styled.div`\n  cursor: pointer;\n  text-align: left;\n  border-radius: 5px;\n  /* overflow: hidden; */\n  box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.03);\n  &:hover .details {\n    border-radius: 0 0 5px 5px;\n    border: 1px solid var(--black);\n    border-top: none;\n  }\n  img {\n    width: 100%;\n    height: 160px;\n    object-fit: cover;\n    vertical-align: top;\n    border-radius: 5px 5px 0 0;\n  }\n  .details {\n    padding: 1.5em;\n    border: 1px solid transparent;\n    border-top: none;\n    transition: 0.3s border;\n    background: var(--white);\n  }\n  h2 {\n    margin: 0;\n    margin-bottom: 1rem;\n    font-size: 18px;\n    font-weight: 700;\n  }\n  p {\n    font-size: 0.9em;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nfunction Country({\n  characterImageFull,\n  flag,\n  name,\n  population,\n  region,\n  capital,\n  nativeName,\n  cioc,\n  alpha2Code,\n}) {\n  const history = useHistory();\n  function handleClick() {\n    console.log(\"cioc\", cioc);\n    // const id = cioc || name\n    history.push(`/character/${name}`);\n  }\n\n  return (\n    <CountryStyled onClick={handleClick}>\n      <img loading=\"lazy\" src={flag} alt=\"\" />\n      <div className=\"details\">\n        <h2>{name}</h2>\n        {/* <p><strong>AF:</strong> {alpha2Code}</p> */}\n      </div>\n    </CountryStyled>\n  );\n}\n\nexport default Country;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst WrapperStyled = styled.div`\n  max-width: 1312px;\n  margin: auto;\n  padding: 0 1rem;\n`\n\nfunction Wrapper({ children }) {\n  return (\n    <WrapperStyled>\n      {children}\n    </WrapperStyled>\n  )\n}\n\nexport default Wrapper\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Country from \"./country\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Wrapper from \"./wrapper\";\n\nconst CountryListStyled = styled.div`\n  display: grid;\n  grid-row-gap: 2.3em;\n  grid-auto-flow: columns;\n  grid-column-gap: 66px;\n  grid-template-columns: repeat(auto-fill, 270px);\n  background: var(--background);\n  justify-content: center;\n  padding: 3em 0;\n`;\n\nfunction CountryList() {\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState(\"\");\n\n  const countryListByName = useSelector((state) => state.countryListByName);\n\n  const countryList = useSelector((state) => {\n    if (countryListByName.length > 0) {\n      return countryListByName;\n    }\n\n    return state.countryList;\n  });\n\n  // console.log(\"el estado total de mi app es\", countryList);\n  // const [countryList, setCountryList] = useState([])\n\n  //https://api.jsonbin.io/b/5ff9445c61f92720434a7272/3\n  //https://restcountries.eu/rest/v2/all\n  useEffect(() => {\n    fetch(\"https://api.jsonbin.io/b/5ff9445c61f92720434a7272/3\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((list) => {\n        dispatch({\n          type: \"SET_COUNTRY_LIST\",\n          payload: list,\n        });\n        //setCountryList(data);\n        //console.log(list);\n      })\n      .catch(() => {\n        console.log(\"hubo un error, que dolor que dolo que pena\");\n      });\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <CountryListStyled>\n        {countryList.map(({ characterImageFull, characterName, houseName }) => {\n          if (characterImageFull) {\n            return (\n              <Country\n                flag={characterImageFull}\n                name={characterName}\n                key={characterImageFull + Math.random()}\n                region={houseName}\n              />\n            );\n          }\n        })}\n      </CountryListStyled>\n    </Wrapper>\n  );\n}\n\nexport default CountryList;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst InputStyled = styled.label`\n  display: inline-flex;\n  background: var(--white);\n  align-items: center;\n  box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\n  padding: 0 2rem;\n  border-radius: 5px;\n  flex: 1;\n  i {\n    margin-right: 1em;\n    color: #C4C4C4;\n  }\n  input {\n    /* width: 100%; */\n    flex: 1;\n    border: none;\n    height: 48px;\n    line-height: 48px;\n    font-size: .7em;\n    outline: 0;\n    color: var(--black);\n    background: var(--white);\n    &::-webkit-input-placeholder {\n      color: #C4C4C4;\n    }\n  }\n`\n\nfunction Input({ ...props }) {\n  return (\n    <InputStyled>\n      <i className=\"fas fa-search\"></i>\n      <input type=\"text\" {...props} />\n    </InputStyled>\n  )\n}\n\nexport default Input\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./input\";\nimport { useDispatch } from \"react-redux\";\n\nconst SearchStyled = styled.div`\n  display: flex;\n  position: relative;\n  .close {\n    position: absolute;\n    right: 1em;\n    top: 1em;\n    border-radius: 50%;\n    border: none;\n    box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n  }\n`;\n\nfunction Search() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const filterByName = (e) => {\n    setInputValue(e.target.value);\n    dispatch({\n      type: \"SET_COUNTRY_BY_NAME\",\n      payload: e.target.value,\n    });\n  };\n  const clearInput = () => {\n    dispatch({\n      type: \"SET_COUNTRY_BY_NAME\",\n      payload: \"\",\n    });\n    setInputValue(\"\");\n  };\n  return (\n    <SearchStyled>\n      {inputValue && (\n        <i className=\"fas fa-times close\" onClick={clearInput}></i>\n      )}\n      <Input\n        placeholder=\"Search for a character...\"\n        value={inputValue}\n        onChange={filterByName}\n      />\n    </SearchStyled>\n  );\n}\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Search from \"./search\";\n\nimport Wrapper from \"./wrapper\";\n\nconst ActionListStyled = styled.div`\n  .grid {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-row-gap: 20px;\n  }\n  @media screen and (min-width: 768px) {\n    .grid {\n      grid-template-columns: 480px 1fr 164px;\n    }\n  }\n`;\n\nfunction ActionList() {\n  const [query, setQuery] = useState(\"\");\n  return (\n    <ActionListStyled>\n      <Wrapper>\n        <div className=\"grid\">\n          <Search />\n          <span></span>\n        </div>\n      </Wrapper>\n    </ActionListStyled>\n  );\n}\n\nexport default ActionList;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Wrapper from \"./wrapper\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"./img/gotlogo.png\";\n\nconst HeaderStyled = styled.div`\n  background: var(--white);\n  margin-bottom: 1em;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.06);\n  .content {\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .imggg {\n    width: 100px;\n    height: 100px;\n    object-fit: contain;\n  }\n  a {\n    text-decoration: none;\n    color: var(--dark);\n  }\n  .dark-mode {\n    cursor: pointer;\n    .moon {\n      transform: rotate(-25deg);\n      display: inline-flex;\n      margin-right: 10px;\n    }\n    p {\n      font-size: 12px;\n      font-weight: 600;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 3em;\n    h1 {\n      font-size: 24px;\n    }\n    p {\n      font-size: 1rem;\n    }\n  }\n`;\n\nfunction Header({ setDarkMode, darkMode }) {\n  function handleClick() {\n    setDarkMode(!darkMode);\n  }\n  return (\n    <HeaderStyled>\n      <Wrapper>\n        <div className=\"content\">\n          <Link to=\"/\">\n            <img className=\"imggg\" src={logo} alt=\"image\" />\n          </Link>\n          <div className=\"dark-mode\">\n            <p onClick={handleClick}>\n              <span className=\"moon\">\n                {darkMode ? (\n                  <i className=\"fas fa-moon\"></i>\n                ) : (\n                  <i className=\"far fa-moon\"></i>\n                )}\n              </span>\n              Dark Mode\n            </p>\n          </div>\n        </div>\n      </Wrapper>\n    </HeaderStyled>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CountrySelectedStyled = styled.div`\n  margin-top: 3em;\n  padding-bottom: 3em;\n  img {\n    width: 100%;\n    margin-bottom: 2em;\n  }\n  .grid {\n    display: grid;\n    grid-row-gap: 1em;\n  }\n  .border-item {\n    padding: 0.5em 2em;\n    border-radius: 5px;\n    margin-right: 15px;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n    display: inline-flex;\n    margin-bottom: 15px;\n    background: var(--white);\n  }\n  .languages {\n    span {\n      margin-right: 5px;\n      &:after {\n        content: \",\";\n      }\n      &:last-child {\n        &:after {\n          display: none;\n        }\n      }\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 120px;\n    margin-top: 5em;\n    .grid {\n      grid-template-columns: 1fr 1fr;\n    }\n    .borders {\n      display: inline-flex;\n      margin-right: 1em;\n      margin-top: 3.5em;\n    }\n  }\n`;\n\nfunction CountrySelected({\n  characterImageFull,\n  characterName,\n  houseName,\n  actorName,\n  nickname,\n  siblings = [],\n  guardedBy = [],\n  killed = [],\n  parents = [],\n  servedBy = [],\n  parentOf = [],\n  marriedEngaged = [],\n  killedBy = [],\n  serves = [],\n  kingsguard,\n}) {\n  return (\n    <CountrySelectedStyled>\n      <img src={characterImageFull} alt=\"\" />\n      <div>\n        <h2>{characterName}</h2>\n        <div className=\"grid\">\n          <div>\n            <p>\n              <strong> Name: </strong> {characterName}\n            </p>\n            <p style={houseName ? {} : { display: \"none\" }}>\n              <strong>House Name: </strong> {houseName}\n            </p>\n            <p style={nickname ? {} : { display: \"none\" }}>\n              <strong>Nickname: </strong> {nickname}\n            </p>\n            <p style={killedBy.length > 0 ? {} : { display: \"none\" }}>\n              <strong>Killed By: </strong> {killedBy}\n            </p>\n            <p>\n              <strong>Actor Name: </strong> {actorName}\n            </p>\n            <p style={marriedEngaged.length > 0 ? {} : { display: \"none\" }}>\n              <strong>Married/Engaged : </strong>\n            </p>\n            {marriedEngaged.map((item) => (\n              <span class=\"border-item\">{item}</span>\n            ))}\n            <p style={servedBy.length > 0 ? {} : { display: \"none\" }}>\n              <strong>Served by : </strong>\n            </p>\n            {servedBy.map((item) => (\n              <span class=\"border-item\">{item}</span>\n            ))}\n            <p style={parentOf.length > 0 ? {} : { display: \"none\" }}>\n              <strong>Parents Of : </strong>\n            </p>\n            {parentOf.map((item) => (\n              <span class=\"border-item\">{item}</span>\n            ))}\n            <p style={serves.length > 0 ? {} : { display: \"none\" }}>\n              <strong>Serves : </strong>\n            </p>\n            {serves.map((item) => (\n              <span class=\"border-item\">{item}</span>\n            ))}\n\n            <p style={parents.length > 0 ? {} : { display: \"none\" }}>\n              <strong>Parents : </strong>\n            </p>\n            {parents.map((item) => (\n              <span class=\"border-item\">{item}</span>\n            ))}\n          </div>\n          <div></div>\n        </div>\n        <p\n          style={killed.length > 0 ? {} : { display: \"none\" }}\n          className=\"borders\"\n        >\n          <strong>Kill : </strong>\n        </p>\n        {killed.map((item) => (\n          <span class=\"border-item\">{item}</span>\n        ))}\n\n        <p\n          style={guardedBy.length > 0 ? {} : { display: \"none\" }}\n          className=\"borders\"\n        >\n          <strong>GaurdedBy : </strong>\n        </p>\n        {guardedBy.map((item) => (\n          <span class=\"border-item\">{item}</span>\n        ))}\n        <p\n          style={siblings.length > 0 ? {} : { display: \"none\" }}\n          className=\"borders\"\n        >\n          <strong>Siblings : </strong>\n        </p>\n        {siblings.map((item) => (\n          <span class=\"border-item\">{item}</span>\n        ))}\n      </div>\n    </CountrySelectedStyled>\n  );\n}\n\nexport default CountrySelected;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Wrapper from \"./wrapper\";\nimport { useSelector } from \"react-redux\";\nimport CountrySelected from \"./country-selected\";\n\nconst CountryPageStyled = styled.div`\n  .back {\n    background: var(--white);\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n    padding: 0.7em 2.2em;\n    border-radius: 5px;\n    border: none;\n    cursor: pointer;\n    margin-top: 1em;\n    color: var(--black);\n    i {\n      margin-right: 5px;\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    .back {\n      margin-top: 3em;\n    }\n  }\n`;\n\nfunction CountryPage({ match, history }) {\n  let DBcountry = useSelector((state) =>\n    state.countryList.find((item) => item.characterName === match.params.id)\n  );\n  console.log(DBcountry);\n  const [country, setCountry] = useState(DBcountry);\n\n  function handleClick() {\n    history.goBack();\n  }\n  return (\n    <CountryPageStyled>\n      <Wrapper>\n        <button className=\"back\" onClick={handleClick}>\n          <i className=\"fas fa-long-arrow-alt-left\"></i> Back\n        </button>\n        <CountrySelected {...country} />\n      </Wrapper>\n    </CountryPageStyled>\n  );\n}\n\nexport default CountryPage;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CountryList from \"./country-list\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer\";\nimport ActionList from \"./action-list\";\nimport Header from \"./header\";\nimport CountryPage from \"./country-page\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./search\";\n\nconst initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: \"\",\n};\n\nconst store = createStore(reducer, initialState);\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [query, setQuery] = useState(\"\");\n\n  const mainClass = darkMode ? \"is-dark-mode\" : \"is-light-mode\";\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n    return () => {\n      mq.removeListener(changeMedia);\n    };\n  }, []);\n  return (\n    <main className={mainClass}>\n      <Provider store={store}>\n        <Router>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Switch>\n            <Route path=\"/character/:id\" component={CountryPage} />\n            <Route path=\"/\">\n              <ActionList />\n\n              <CountryList />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </main>\n  );\n}\n\nexport default App;\n","export default function reducer(state, action) {\n  console.log(action);\n  switch (action.type) {\n    case \"SET_COUNTRY_LIST\": {\n      //console.log(\"voy a actualizar la lista de paises\");\n      return { ...state, countryList: action.payload };\n    }\n\n    case \"SET_COUNTRY_BY_NAME\": {\n      let list;\n\n      list = state.countryList;\n      console.log(list);\n\n      const countryListByName = list.filter((country) => country.characterName);\n      console.log(countryListByName.characterName);\n      return { ...state, countryListByName };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}